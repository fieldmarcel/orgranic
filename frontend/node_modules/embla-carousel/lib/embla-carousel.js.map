{"version":3,"file":"embla-carousel.js","sources":["../src/vanilla/components/alignment.ts","../src/vanilla/components/animation.ts","../src/vanilla/components/axis.ts","../src/vanilla/components/counter.ts","../src/vanilla/components/vector1d.ts","../src/vanilla/components/direction.ts","../src/vanilla/components/eventStore.ts","../src/vanilla/components/dragHandler.ts","../src/vanilla/components/dragTracker.ts","../src/vanilla/components/limit.ts","../src/vanilla/components/pxToPercent.ts","../src/vanilla/components/utils.ts","../src/vanilla/components/scrollBody.ts","../src/vanilla/components/scrollBounds.ts","../src/vanilla/components/scrollContain.ts","../src/vanilla/components/scrollLimit.ts","../src/vanilla/components/scrollLooper.ts","../src/vanilla/components/scrollProgress.ts","../src/vanilla/components/scrollSnap.ts","../src/vanilla/components/scrollTarget.ts","../src/vanilla/components/scrollTo.ts","../src/vanilla/components/slideLooper.ts","../src/vanilla/components/slidesInView.ts","../src/vanilla/components/translate.ts","../src/vanilla/components/engine.ts","../src/vanilla/components/eventEmitter.ts","../src/vanilla/components/options.ts","../src/vanilla/index.ts"],"sourcesContent":["export type AlignmentOption = 'start' | 'center' | 'end' | number\n\ntype Params = {\n  viewSize: number\n  align: AlignmentOption\n}\n\nexport type Alignment = {\n  measure: (n: number) => number\n}\n\nexport function Alignment(params: Params): Alignment {\n  const { viewSize, align } = params\n  const predefined = { start, center, end }\n\n  function start(): number {\n    return 0\n  }\n\n  function center(n: number): number {\n    return (viewSize - n) / 2\n  }\n\n  function end(n: number): number {\n    return viewSize - n\n  }\n\n  function percent(): number {\n    return viewSize * Number(align)\n  }\n\n  function measure(n: number): number {\n    if (typeof align === 'number') return percent()\n    return predefined[align](n)\n  }\n\n  const self: Alignment = {\n    measure,\n  }\n  return self\n}\n","type Callback = () => void\n\nexport type Animation = {\n  start: () => void\n  stop: () => void\n  proceed: () => void\n}\n\nexport function Animation(callback: FrameRequestCallback): Animation {\n  const run = requestAnimationFrame.bind(window)\n  const end = cancelAnimationFrame.bind(window)\n  let animationFrame = 0\n\n  function ifAnimating(active: boolean, cb: Callback): Callback {\n    return (): void => {\n      if (active === !!animationFrame) cb()\n    }\n  }\n\n  function start(): void {\n    animationFrame = run(callback)\n  }\n\n  function stop(): void {\n    end(animationFrame)\n    animationFrame = 0\n  }\n\n  const self: Animation = {\n    proceed: ifAnimating(true, start),\n    start: ifAnimating(false, start),\n    stop: ifAnimating(true, stop),\n  }\n  return self\n}\n","export type AxisOption = 'x' | 'y'\n\nexport type Axis = {\n  cross: AxisOption\n  scroll: AxisOption\n  measure: (node: HTMLElement) => number\n}\n\nexport function Axis(axis: AxisOption): Axis {\n  const scroll = axis === 'y' ? 'y' : 'x'\n  const cross = axis === 'y' ? 'x' : 'y'\n\n  function measure(node: HTMLElement): number {\n    const { width, height } = node.getBoundingClientRect()\n    return scroll === 'x' ? width : height\n  }\n\n  const self: Axis = {\n    cross,\n    measure,\n    scroll,\n  }\n  return self\n}\n","import { Limit } from './limit'\n\ntype Params = {\n  start: number\n  limit: Limit\n  loop: boolean\n}\n\nexport type Counter = {\n  min: number\n  max: number\n  get: () => number\n  set: (n: number) => Counter\n  add: (n: number) => Counter\n  clone: () => Counter\n}\n\nexport function Counter(params: Params): Counter {\n  const { start, limit, loop } = params\n  const { min, max } = limit\n  const type = loop ? 'loop' : 'constrain'\n  let counter = withinLimit(start)\n\n  function get(): number {\n    return counter\n  }\n\n  function set(n: number): Counter {\n    counter = withinLimit(n)\n    return self\n  }\n\n  function withinLimit(n: number): number {\n    return limit[type](n)\n  }\n\n  function add(n: number): Counter {\n    if (n !== 0) {\n      const sign = n / Math.abs(n)\n      set(get() + sign)\n      return add(n + sign * -1)\n    }\n    return self\n  }\n\n  function clone(): Counter {\n    return Counter({ start: get(), limit, loop })\n  }\n\n  const self: Counter = {\n    add,\n    clone,\n    get,\n    max,\n    min,\n    set,\n  }\n  return self\n}\n","export type Vector1D = {\n  get: () => number\n  set: (v: Vector1D | number) => Vector1D\n  add: (v: Vector1D | number) => Vector1D\n  subtract: (v: Vector1D | number) => Vector1D\n  multiply: (n: number) => Vector1D\n  divide: (n: number) => Vector1D\n  normalize: () => Vector1D\n}\n\nexport function Vector1D(value: number): Vector1D {\n  let vector = value\n\n  function get(): number {\n    return vector\n  }\n\n  function set(n: Vector1D | number): Vector1D {\n    vector = readNumber(n)\n    return self\n  }\n\n  function add(n: Vector1D | number): Vector1D {\n    vector += readNumber(n)\n    return self\n  }\n\n  function subtract(n: Vector1D | number): Vector1D {\n    vector -= readNumber(n)\n    return self\n  }\n\n  function multiply(n: number): Vector1D {\n    vector *= n\n    return self\n  }\n\n  function divide(n: number): Vector1D {\n    vector /= n\n    return self\n  }\n\n  function normalize(): Vector1D {\n    if (vector !== 0) divide(vector)\n    return self\n  }\n\n  function readNumber(n: Vector1D | number): number {\n    return typeof n === 'number' ? n : n.get()\n  }\n\n  const self: Vector1D = {\n    add,\n    divide,\n    get,\n    multiply,\n    normalize,\n    set,\n    subtract,\n  }\n  return self\n}\n","import { Vector1D } from './vector1d'\n\nexport type Direction = {\n  get: () => number\n  set: (v: Vector1D) => Direction\n}\n\nexport function Direction(value: number): Direction {\n  const direction = Vector1D(normalize(value))\n  const { get } = direction\n\n  function normalize(n: number): number {\n    return n === 0 ? 0 : n / Math.abs(n)\n  }\n\n  function set(v: Vector1D): Direction {\n    const d = normalize(v.get())\n    if (d !== 0) direction.set(d)\n    return self\n  }\n\n  const self: Direction = {\n    get,\n    set,\n  }\n  return self\n}\n","type EventRemover = () => void\ntype EventHandler = EventListener | EventListenerObject | null\ntype EventOptions = boolean | AddEventListenerOptions | undefined\n\nexport type EventStore = {\n  add: (\n    node: EventTarget,\n    type: string,\n    handler: EventHandler,\n    options?: EventOptions,\n  ) => EventStore\n  removeAll: () => EventStore\n}\n\nexport function EventStore(): EventStore {\n  const listeners: EventRemover[] = []\n\n  function add(\n    node: EventTarget,\n    type: string,\n    handler: EventHandler,\n    options: EventOptions = false,\n  ): EventStore {\n    node.addEventListener(type, handler, options)\n    listeners.push(() => {\n      return node.removeEventListener(type, handler, options)\n    })\n    return self\n  }\n\n  function removeAll(): EventStore {\n    listeners.filter(remove => remove())\n    listeners.length = 0\n    return self\n  }\n\n  const self: EventStore = {\n    add,\n    removeAll,\n  }\n  return self\n}\n","import { Animation } from './animation'\nimport { Counter } from './counter'\nimport { Direction } from './direction'\nimport { DragTracker } from './dragTracker'\nimport { EventEmitter } from './eventEmitter'\nimport { Axis } from './axis'\nimport { EventStore } from './eventStore'\nimport { Limit } from './limit'\nimport { ScrollBody } from './scrollBody'\nimport { ScrollTarget } from './scrollTarget'\nimport { ScrollTo } from './scrollTo'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  axis: Axis\n  element: HTMLElement\n  target: Vector1D\n  dragFree: boolean\n  dragTracker: DragTracker\n  location: Vector1D\n  animation: Animation\n  scrollTo: ScrollTo\n  scrollBody: ScrollBody\n  scrollTarget: ScrollTarget\n  index: Counter\n  limit: Limit\n  loop: boolean\n  events: EventEmitter\n}\n\nexport type DragHandler = {\n  addActivationEvents: () => void\n  clickAllowed: () => boolean\n  pointerDown: () => boolean\n  removeActivationEvents: EventStore['removeAll']\n  removeInteractionEvents: EventStore['removeAll']\n}\n\nexport function DragHandler(params: Params): DragHandler {\n  const { target, scrollBody, dragFree, animation, axis } = params\n  const { element, dragTracker, location, events, limit } = params\n  const { scroll: scrollAxis, cross: crossAxis } = axis\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA']\n  const startScroll = Vector1D(0)\n  const startCross = Vector1D(0)\n  const dragStartPoint = Vector1D(0)\n  const activationEvents = EventStore()\n  const interactionEvents = EventStore()\n  const removeActivationEvents = activationEvents.removeAll\n  const removeInteractionEvents = interactionEvents.removeAll\n  const snapForceBoost = { mouse: 2.5, touch: 3.5 }\n  const freeForceBoost = { mouse: 4, touch: 7 }\n  const snapSpeed = { mouse: 12, touch: 14 }\n  const freeSpeed = { mouse: 6, touch: 5 }\n  const dragThreshold = 4\n  let pointerIsDown = false\n  let preventScroll = false\n  let preventClick = false\n  let isMouse = false\n\n  function addActivationEvents(): void {\n    const node = element\n    activationEvents\n      .add(node, 'touchmove', () => undefined)\n      .add(node, 'touchend', () => undefined)\n      .add(node, 'touchstart', down)\n      .add(node, 'mousedown', down)\n      .add(node, 'touchcancel', up)\n      .add(node, 'contextmenu', up)\n      .add(node, 'click', click)\n  }\n\n  function addInteractionEvents(): void {\n    const node = !isMouse ? element : document\n    interactionEvents\n      .add(node, 'touchmove', move)\n      .add(node, 'touchend', up)\n      .add(node, 'mousemove', move)\n      .add(node, 'mouseup', up)\n  }\n\n  function isFocusNode(node: Element): boolean {\n    const name = node.nodeName || ''\n    return focusNodes.indexOf(name) > -1\n  }\n\n  function movementSpeed(): number {\n    const speed = dragFree ? freeSpeed : snapSpeed\n    const type = isMouse ? 'mouse' : 'touch'\n    return speed[type]\n  }\n\n  function dragForceBoost(): number {\n    const boost = dragFree ? freeForceBoost : snapForceBoost\n    const type = isMouse ? 'mouse' : 'touch'\n    return boost[type]\n  }\n\n  function seekTargetBy(force: number): void {\n    const { scrollTo, scrollTarget, index } = params\n    const reachedLimit = limit.reachedAny(target.get() + force)\n    const currentLocation = scrollTarget.byDistance(0, false)\n    const targetChanged = currentLocation.index !== index.get()\n    const seekNext = !targetChanged && Math.abs(force) > dragThreshold\n\n    if (!dragFree && !reachedLimit && seekNext) {\n      const indexDiff = Direction(force).get() * -1\n      const next = index.clone().add(indexDiff)\n      scrollTo.index(next.get(), 0)\n    } else {\n      scrollTo.distance(force, !dragFree)\n    }\n  }\n\n  function down(evt: Event): void {\n    isMouse = evt.type === 'mousedown'\n    if (isMouse && (evt as MouseEvent).button !== 0) return\n\n    const isMoving = delta(target.get(), location.get()) >= 2\n    const clearPreventClick = isMouse || !isMoving\n    const isNotFocusNode = !isFocusNode(evt.target as Element)\n    const preventDefault = isMoving || (isMouse && isNotFocusNode)\n\n    pointerIsDown = true\n    dragTracker.pointerDown(evt)\n    dragStartPoint.set(target)\n    target.set(location)\n    scrollBody.useDefaultMass().useSpeed(80)\n    addInteractionEvents()\n    startScroll.set(dragTracker.readPoint(evt, scrollAxis))\n    startCross.set(dragTracker.readPoint(evt, crossAxis))\n    events.emit('pointerDown')\n\n    if (clearPreventClick) preventClick = false\n    if (preventDefault) evt.preventDefault()\n  }\n\n  function move(evt: Event): void {\n    if (!preventScroll && !isMouse) {\n      const moveScroll = dragTracker.readPoint(evt, scrollAxis).get()\n      const moveCross = dragTracker.readPoint(evt, crossAxis).get()\n      const diffScroll = delta(moveScroll, startScroll.get())\n      const diffCross = delta(moveCross, startCross.get())\n      preventScroll = diffScroll > diffCross\n      if (!preventScroll && !preventClick) return up()\n    }\n    const diff = dragTracker.pointerMove(evt)\n    const reachedLimit = limit.reachedAny(location.get())\n    const resist = !params.loop && reachedLimit ? 2 : 1\n\n    if (!preventClick && diff) preventClick = true\n    animation.start()\n    target.add(diff / resist)\n    evt.preventDefault()\n  }\n\n  function up(): void {\n    const force = dragTracker.pointerUp() * dragForceBoost()\n    const isMoving = delta(target.get(), dragStartPoint.get()) >= 0.5\n\n    if (isMoving && !isMouse) preventClick = true\n    isMouse = false\n    preventScroll = false\n    pointerIsDown = false\n    interactionEvents.removeAll()\n    scrollBody.useSpeed(movementSpeed())\n    seekTargetBy(force)\n    events.emit('pointerUp')\n  }\n\n  function delta(pointB: number, pointA: number): number {\n    return Math.abs(pointB - pointA)\n  }\n\n  function click(evt: Event): void {\n    if (preventClick) evt.preventDefault()\n  }\n\n  function clickAllowed(): boolean {\n    return !preventClick\n  }\n\n  function pointerDown(): boolean {\n    return pointerIsDown\n  }\n\n  const self: DragHandler = {\n    addActivationEvents,\n    clickAllowed,\n    pointerDown,\n    removeActivationEvents,\n    removeInteractionEvents,\n  }\n  return self\n}\n","import { Axis, AxisOption } from './axis'\nimport { PxToPercent } from './pxToPercent'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  axis: Axis\n  pxToPercent: PxToPercent\n}\n\nexport type DragTracker = {\n  pointerDown: (evt: Event) => number\n  pointerMove: (evt: Event) => number\n  pointerUp: () => number\n  readPoint: (evt: any, axis: AxisOption) => Vector1D\n}\n\nexport function DragTracker(params: Params): DragTracker {\n  const { axis, pxToPercent } = params\n  const { scroll: scrollAxis } = axis\n  const coords = { x: 'clientX', y: 'clientY' }\n  const startDrag = Vector1D(0)\n  const diffDrag = Vector1D(0)\n  const lastDrag = Vector1D(0)\n  const pointValue = Vector1D(0)\n  const trackInterval = 10\n  let trackPoints: number[] = []\n  let trackTime = new Date().getTime()\n  let isMouse = false\n\n  function readPoint(evt: any, type: AxisOption): Vector1D {\n    isMouse = !evt.touches\n    const c = coords[type]\n    const value = isMouse ? evt[c] : evt.touches[0][c]\n    return pointValue.set(value)\n  }\n\n  function pointerDown(evt: Event): number {\n    const point = readPoint(evt, scrollAxis)\n    startDrag.set(point)\n    lastDrag.set(point)\n    return pxToPercent.measure(startDrag.get())\n  }\n\n  function pointerMove(evt: Event): number {\n    const point = readPoint(evt, scrollAxis)\n    const time2 = new Date().getTime()\n    const time1 = trackTime\n\n    if (time2 - time1 >= trackInterval) {\n      trackPoints.push(point.get())\n      trackTime = time2\n    }\n\n    diffDrag.set(point).subtract(lastDrag)\n    lastDrag.set(point)\n    return pxToPercent.measure(diffDrag.get())\n  }\n\n  function pointerUp(): number {\n    const currentPoint = lastDrag.get()\n    const trackLength = isMouse ? 5 : 4\n    const point = trackPoints\n      .slice(-trackLength)\n      .map(trackPoint => currentPoint - trackPoint)\n      .sort((p1, p2) => {\n        return Math.abs(p1) < Math.abs(p2) ? 1 : -1\n      })[0]\n\n    lastDrag.set(point || 0)\n    trackPoints = []\n    return pxToPercent.measure(lastDrag.get())\n  }\n\n  const self: DragTracker = {\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint,\n  }\n  return self\n}\n","type Limits = 'min' | 'max' | ''\n\ntype Params = {\n  min: number\n  max: number\n}\n\nexport type Limit = {\n  min: number\n  max: number\n  length: number\n  loop: (n: number) => number\n  constrain: (n: number) => number\n  reachedAny: (n: number) => boolean\n  reachedMax: (n: number) => boolean\n  reachedMin: (n: number) => boolean\n  removeOffset: (n: number) => number\n}\n\nexport function Limit(params: Params): Limit {\n  const { min, max } = params\n  const loopLimits = { min: max, max: min }\n  const constrainLimits = { min, max }\n  const length = Math.abs(min - max)\n\n  function reachedMin(n: number): boolean {\n    return n < min\n  }\n\n  function reachedMax(n: number): boolean {\n    return n > max\n  }\n\n  function reachedAny(n: number): boolean {\n    return reachedMin(n) || reachedMax(n)\n  }\n\n  function reachedWhich(n: number): Limits {\n    if (reachedMin(n)) return 'min'\n    if (reachedMax(n)) return 'max'\n    return ''\n  }\n\n  function removeOffset(n: number): number {\n    if (min === max) return n\n    while (reachedMin(n)) n += length\n    while (reachedMax(n)) n -= length\n    return n\n  }\n\n  function loop(n: number): number {\n    const which = reachedWhich(n)\n    return which ? loopLimits[which] : n\n  }\n\n  function constrain(n: number): number {\n    const which = reachedWhich(n)\n    return which ? constrainLimits[which] : n\n  }\n\n  const self: Limit = {\n    constrain,\n    length,\n    loop,\n    max,\n    min,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset,\n  }\n  return self\n}\n","export type PxToPercent = {\n  measure: (n: number) => number\n  totalPercent: number\n}\n\nexport function PxToPercent(viewInPx: number): PxToPercent {\n  const totalPercent = 100\n\n  function measure(n: number): number {\n    return (n / viewInPx) * totalPercent\n  }\n\n  const self: PxToPercent = {\n    measure,\n    totalPercent,\n  }\n  return Object.freeze(self)\n}\n","export function map(\n  value: number,\n  iStart: number,\n  iStop: number,\n  oStart: number,\n  oStop: number,\n): number {\n  return (\n    oStart + (oStop - oStart) * ((value - iStart) / (iStop - iStart))\n  )\n}\n\nexport function arrayFromCollection(\n  nodeList: HTMLCollection,\n): HTMLElement[] {\n  return Array.prototype.slice.call(nodeList)\n}\n\nexport function debounce(\n  callback: () => void,\n  time: number,\n): () => void {\n  const timeout = { id: 0 }\n  return (): void => {\n    window.clearTimeout(timeout.id)\n    timeout.id = window.setTimeout(callback, time) || 0\n  }\n}\n\nexport function roundToDecimals(\n  decimalPoints: number,\n): (n: number) => number {\n  const pow = Math.pow(10, decimalPoints)\n  return (n: number) => Math.round(n * pow) / pow\n}\n\nexport function groupArray<GenericType>(\n  array: GenericType[],\n  size: number,\n): GenericType[][] {\n  const groups = []\n  for (let i = 0; i < array.length; i += size) {\n    groups.push(array.slice(i, i + size))\n  }\n  return groups\n}\n\nexport function arrayKeys<GenericType>(array: GenericType): number[] {\n  return Object.keys(array).map(Number)\n}\n\nexport function removeClass(\n  node: HTMLElement,\n  className: string,\n): void {\n  const cl = node.classList\n  if (cl.contains(className)) cl.remove(className)\n}\n\nexport function addClass(node: HTMLElement, className: string): void {\n  const cl = node.classList\n  if (!cl.contains(className)) cl.add(className)\n}\n","import { Direction } from './direction'\nimport { map, roundToDecimals } from './utils'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  location: Vector1D\n  speed: number\n  mass: number\n}\n\nexport type ScrollBody = {\n  location: Vector1D\n  direction: Direction\n  update: () => void\n  seek: (v: Vector1D) => ScrollBody\n  settle: (v: Vector1D) => boolean\n  useSpeed: (n: number) => ScrollBody\n  useDefaultSpeed: () => ScrollBody\n  useMass: (n: number) => ScrollBody\n  useDefaultMass: () => ScrollBody\n}\n\nexport function ScrollBody(params: Params): ScrollBody {\n  const { location, speed, mass } = params\n  const roundToTwoDecimals = roundToDecimals(2)\n  const velocity = Vector1D(0)\n  const acceleration = Vector1D(0)\n  const attraction = Vector1D(0)\n  const direction = Direction(0)\n  const state = { speed, mass }\n\n  function update(): void {\n    velocity.add(acceleration)\n    location.add(velocity)\n    acceleration.multiply(0)\n  }\n\n  function applyForce(v: Vector1D): void {\n    v.divide(state.mass)\n    acceleration.add(v)\n  }\n\n  function seek(v: Vector1D): ScrollBody {\n    attraction.set(v).subtract(location)\n    const magnitude = attraction.get()\n    const m = map(magnitude, 0, 100, 0, state.speed)\n    direction.set(attraction)\n    attraction\n      .normalize()\n      .multiply(m)\n      .subtract(velocity)\n    applyForce(attraction)\n    return self\n  }\n\n  function settle(v: Vector1D): boolean {\n    const diff = v.get() - location.get()\n    const diffRounded = roundToTwoDecimals(diff)\n    const hasSettled = !diffRounded\n    if (hasSettled) location.set(v)\n    return hasSettled\n  }\n\n  function useSpeed(n: number): ScrollBody {\n    state.speed = n\n    return self\n  }\n\n  function useDefaultSpeed(): ScrollBody {\n    useSpeed(speed)\n    return self\n  }\n\n  function useMass(n: number): ScrollBody {\n    state.mass = n\n    return self\n  }\n\n  function useDefaultMass(): ScrollBody {\n    useMass(mass)\n    return self\n  }\n\n  const self: ScrollBody = {\n    direction,\n    location,\n    seek,\n    settle,\n    update,\n    useDefaultMass,\n    useDefaultSpeed,\n    useMass,\n    useSpeed,\n  }\n  return self\n}\n","import { Animation } from './animation'\nimport { Limit } from './limit'\nimport { ScrollBody } from './scrollBody'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  limit: Limit\n  location: Vector1D\n  scrollBody: ScrollBody\n  animation: Animation\n}\n\nexport type ScrollBounds = {\n  constrain: (v: Vector1D) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function ScrollBounds(params: Params): ScrollBounds {\n  const { limit, location, scrollBody, animation } = params\n  const { min, max, reachedMin, reachedMax } = limit\n  const tolerance = 50\n  let disabled = false\n  let timeout = 0\n\n  function shouldConstrain(v: Vector1D): boolean {\n    if (disabled || timeout) return false\n    if (reachedMin(location.get())) return v.get() !== min\n    if (reachedMax(location.get())) return v.get() !== max\n    return false\n  }\n\n  function constrain(v: Vector1D): void {\n    if (!shouldConstrain(v)) return\n\n    timeout = window.setTimeout(() => {\n      const constraint = limit.constrain(v.get())\n      v.set(constraint)\n      scrollBody.useSpeed(10).useMass(3)\n      animation.start()\n      timeout = 0\n    }, tolerance)\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  const self: ScrollBounds = {\n    constrain,\n    toggleActive,\n  }\n  return self\n}\n","import { Alignment } from './alignment'\nimport { Limit } from './limit'\n\nexport type ScrollContainOption = '' | 'trimSnaps' | 'keepSnaps'\n\ntype Params = {\n  contentSize: number\n  viewSize: number\n  alignment: Alignment\n}\n\nexport type ScrollContain = {\n  measure: (scrollSnaps: number[], trim: boolean) => number[]\n}\n\nexport function ScrollContain(params: Params): ScrollContain {\n  const { alignment, contentSize, viewSize } = params\n  const scrollBounds = Limit({ min: -contentSize + viewSize, max: 0 })\n  const alignedWithinView = [alignment.measure(contentSize)]\n  const contentExceedsView = contentSize > viewSize\n\n  function findDuplicates(scrollSnaps: number[]): Limit {\n    const startSnap = scrollSnaps[0]\n    const endSnap = scrollSnaps[scrollSnaps.length - 1]\n    const min = scrollSnaps.lastIndexOf(startSnap) + 1\n    const max = scrollSnaps.indexOf(endSnap)\n    return Limit({ min, max })\n  }\n\n  function measure(scrollSnaps: number[], trim: boolean): number[] {\n    const containedSnaps = scrollSnaps.map(scrollBounds.constrain)\n    const { min, max } = findDuplicates(containedSnaps)\n\n    if (!contentExceedsView) return alignedWithinView\n    if (!trim) return containedSnaps\n    return containedSnaps.slice(min - 1, max + 1)\n  }\n\n  const self: ScrollContain = {\n    measure,\n  }\n  return self\n}\n","import { Limit } from './limit'\n\ntype Params = {\n  contentSize: number\n  loop: boolean\n}\n\nexport type ScrollLimit = {\n  measure: (scrollSnaps: number[]) => Limit\n}\n\nexport function ScrollLimit(params: Params): ScrollLimit {\n  const { contentSize, loop } = params\n\n  function measure(scrollSnaps: number[]): Limit {\n    const startSnap = scrollSnaps[0]\n    const endSnap = scrollSnaps[scrollSnaps.length - 1]\n    const min = loop ? startSnap - contentSize : endSnap\n    const max = startSnap\n    return Limit({ min, max })\n  }\n\n  const self: ScrollLimit = {\n    measure,\n  }\n  return self\n}\n","import { Limit } from './limit'\nimport { PxToPercent } from './pxToPercent'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  contentSize: number\n  limit: Limit\n  location: Vector1D\n  pxToPercent: PxToPercent\n}\n\nexport type ScrollLooper = {\n  loop: (vectors: Vector1D[], direction: number) => void\n}\n\nexport function ScrollLooper(params: Params): ScrollLooper {\n  const { contentSize, location, limit, pxToPercent } = params\n  const min = limit.min + pxToPercent.measure(0.1)\n  const max = limit.max + pxToPercent.measure(0.1)\n  const { reachedMin, reachedMax } = Limit({ min, max })\n\n  function shouldLoop(direction: number): boolean {\n    if (direction === 1) return reachedMax(location.get())\n    if (direction === -1) return reachedMin(location.get())\n    return false\n  }\n\n  function loop(vectors: Vector1D[], direction: number): void {\n    if (!shouldLoop(direction)) return\n\n    const loopDistance = contentSize * (direction * -1)\n    vectors.forEach(v => v.add(loopDistance))\n  }\n\n  const self: ScrollLooper = {\n    loop,\n  }\n  return self\n}\n","import { Limit } from './limit'\r\n\r\ntype Params = {\r\n  limit: Limit\r\n}\r\n\r\nexport type ScrollProgress = {\r\n  get: (n: number) => number\r\n}\r\n\r\nexport function ScrollProgress(params: Params): ScrollProgress {\r\n  const { max, length: scrollLength } = params.limit\r\n\r\n  function get(n: number): number {\r\n    const currentLocation = n - max\r\n    return currentLocation / -scrollLength\r\n  }\r\n\r\n  const self: ScrollProgress = {\r\n    get,\r\n  }\r\n  return self\r\n}\r\n","import { Alignment } from './alignment'\nimport { Counter } from './counter'\nimport { Limit } from './limit'\n\ntype Params = {\n  snapSizes: number[]\n  alignment: Alignment\n  loop: boolean\n}\n\nexport type ScrollSnap = {\n  measure: (index: number) => number\n}\n\nexport function ScrollSnap(params: Params): ScrollSnap {\n  const { snapSizes, alignment, loop } = params\n  const alignments = snapSizes.map(alignment.measure)\n  const distancesBetween = distancesBetweenScrollSnaps()\n\n  function distancesBetweenScrollSnaps(): number[] {\n    const limit = Limit({ min: 0, max: snapSizes.length - 1 })\n    const counter = Counter({ limit, start: 0, loop })\n\n    return snapSizes.map((size, index) => {\n      const next = counter.set(index + 1).get()\n      return size + alignments[index] - alignments[next]\n    })\n  }\n\n  function measure(index: number): number {\n    const sizes = distancesBetween.slice(0, index)\n    return sizes.reduce((a, s) => a - s, alignments[0])\n  }\n\n  const self: ScrollSnap = {\n    measure,\n  }\n  return self\n}\n","import { Counter } from './counter'\nimport { Limit } from './limit'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  index: Counter\n  loop: boolean\n  scrollSnaps: number[]\n  contentSize: number\n  limit: Limit\n  target: Vector1D\n}\n\nexport type Target = {\n  distance: number\n  index: number\n}\n\nexport type ScrollTarget = {\n  byIndex: (target: number, direction: number) => Target\n  byDistance: (force: number, snap: boolean) => Target\n  shortcut: (target: number, direction: number) => number\n}\n\nexport function ScrollTarget(params: Params): ScrollTarget {\n  const { loop, limit, scrollSnaps, contentSize } = params\n  const { reachedMax, reachedAny, removeOffset } = limit\n\n  function minDistance(d1: number, d2: number): number {\n    return Math.abs(d1) < Math.abs(d2) ? d1 : d2\n  }\n\n  function findTargetSnap(target: number): Target {\n    const distance = removeOffset(target)\n    const ascDiffsToSnaps = scrollSnaps\n      .map(scrollSnap => scrollSnap - distance)\n      .map(diffToSnap => shortcut(diffToSnap, 0))\n      .map((diff, i) => ({ diff, index: i }))\n      .sort((d1, d2) => Math.abs(d1.diff) - Math.abs(d2.diff))\n\n    const { index } = ascDiffsToSnaps[0]\n    return { index, distance }\n  }\n\n  function shortcut(target: number, direction: number): number {\n    const t1 = target\n    const t2 = target + contentSize\n    const t3 = target - contentSize\n\n    if (!loop) return t1\n    if (!direction) return minDistance(minDistance(t1, t2), t3)\n\n    const shortest = minDistance(t1, direction === 1 ? t2 : t3)\n    return Math.abs(shortest) * direction\n  }\n\n  function findTargetIndex(target: number, index: number): number {\n    const reachedBound = !loop && reachedAny(target)\n    if (!reachedBound) return index\n\n    const { min, max } = params.index\n    return reachedMax(target) ? min : max\n  }\n\n  function byIndex(index: number, direction: number): Target {\n    const diffToSnap = scrollSnaps[index] - params.target.get()\n    const distance = shortcut(diffToSnap, direction)\n    return { index, distance }\n  }\n\n  function byDistance(distance: number, snap: boolean): Target {\n    const target = params.target.get() + distance\n    const targetSnap = findTargetSnap(target)\n    const index = findTargetIndex(target, targetSnap.index)\n    const reachedBound = !loop && reachedAny(target)\n\n    if (!snap || reachedBound) return { index, distance }\n\n    const diffToSnap = scrollSnaps[index] - targetSnap.distance\n    const snapDistance = distance + shortcut(diffToSnap, 0)\n\n    return { index, distance: snapDistance }\n  }\n\n  const self: ScrollTarget = {\n    byDistance,\n    byIndex,\n    shortcut,\n  }\n  return self\n}\n","import { Animation } from './animation'\nimport { Counter } from './counter'\nimport { EventEmitter } from './eventEmitter'\nimport { ScrollTarget, Target } from './scrollTarget'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  animation: Animation\n  target: Vector1D\n  index: Counter\n  indexPrevious: Counter\n  scrollTarget: ScrollTarget\n  events: EventEmitter\n}\n\nexport type ScrollTo = {\n  distance: (n: number, snap: boolean) => void\n  index: (n: number, direction: number) => void\n}\n\nexport function ScrollTo(params: Params): ScrollTo {\n  const { index: indexCurrent, scrollTarget, animation } = params\n  const { indexPrevious, events, target: targetDistance } = params\n\n  function scrollTo(target: Target): void {\n    const distanceDiff = target.distance\n    const indexDiff = target.index !== indexCurrent.get()\n\n    if (distanceDiff) {\n      animation.start()\n      targetDistance.add(distanceDiff)\n    }\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get())\n      indexCurrent.set(target.index)\n      events.emit('select')\n    }\n  }\n\n  function distance(n: number, snap: boolean): void {\n    const target = scrollTarget.byDistance(n, snap)\n    scrollTo(target)\n  }\n\n  function index(n: number, direction: number): void {\n    const targetIndex = indexCurrent.clone().set(n)\n    const target = scrollTarget.byIndex(targetIndex.get(), direction)\n    scrollTo(target)\n  }\n\n  const self: ScrollTo = {\n    distance,\n    index,\n  }\n  return self\n}\n","import { Axis } from './axis'\nimport { arrayKeys } from './utils'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  axis: Axis\n  scrollSnaps: number[]\n  viewSize: number\n  location: Vector1D\n  slideSizes: number[]\n  contentSize: number\n}\n\ntype LoopPoint = {\n  point: number\n  location: number\n  index: number\n  getTarget: (location: number) => number\n}\n\nexport type SlideLooper = {\n  canLoop: () => boolean\n  clear: (slides: HTMLElement[]) => void\n  loop: (slides: HTMLElement[]) => void\n  loopPoints: LoopPoint[]\n}\n\nexport function SlideLooper(params: Params): SlideLooper {\n  const { axis, location: containerLocation } = params\n  const { contentSize, viewSize, slideSizes, scrollSnaps } = params\n  const ascItems = arrayKeys(slideSizes)\n  const descItems = arrayKeys(slideSizes).reverse()\n  const loopPoints = startPoints().concat(endPoints())\n  const loopStyle = axis.scroll === 'x' ? 'left' : 'top'\n\n  function subtractItemSizes(\n    indexes: number[],\n    from: number,\n  ): number {\n    return indexes.reduce((a: number, i) => {\n      const size = slideSizes[i]\n      return a - size\n    }, from)\n  }\n\n  function loopItemsIn(\n    sizeOfGap: number,\n    indexes: number[],\n  ): number[] {\n    return indexes.reduce((a: number[], i) => {\n      const gapLeft = subtractItemSizes(a, sizeOfGap)\n      return gapLeft > 0 ? a.concat([i]) : a\n    }, [])\n  }\n\n  function loopStart(\n    sizeOfGap: number,\n    indexes: number[],\n    from: number,\n  ): number {\n    return indexes.reduce((a: number, i) => {\n      const gapFilled = a + slideSizes[i]\n      return gapFilled < sizeOfGap ? gapFilled : a\n    }, from)\n  }\n\n  function loopPointFor(\n    indexes: number[],\n    from: number,\n    direction: 0 | 1,\n  ): number {\n    const slideCount = ascItems.length - 1\n    return subtractItemSizes(\n      indexes.map(i => (i + direction) % slideCount),\n      from,\n    )\n  }\n\n  function loopPointsFor(\n    indexes: number[],\n    from: number,\n    direction: 0 | 1,\n  ): LoopPoint[] {\n    const ascIndexes = indexes.slice().sort((a, b) => a - b)\n    return ascIndexes.map(\n      (index, loopIndex): LoopPoint => {\n        const initial = contentSize * (!direction ? 0 : -1)\n        const offset = contentSize * (!direction ? 1 : 0)\n        const slidesInSpan = ascIndexes.slice(0, loopIndex)\n        const point = loopPointFor(slidesInSpan, from, direction)\n        const getTarget = (location: number): number =>\n          location > point ? initial : offset\n        return { point, getTarget, index, location: -1 }\n      },\n    )\n  }\n\n  function startPoints(): LoopPoint[] {\n    const gap = scrollSnaps[0] - 1\n    const indexes = loopItemsIn(gap, descItems)\n    const start = loopStart(gap, indexes, 0)\n    return loopPointsFor(indexes, start, 1)\n  }\n\n  function endPoints(): LoopPoint[] {\n    const gap = viewSize - scrollSnaps[0] - 1\n    const indexes = loopItemsIn(gap, ascItems)\n    const start = loopStart(contentSize, ascItems, -viewSize)\n    return loopPointsFor(indexes, -start, 0)\n  }\n\n  function canLoop(): boolean {\n    return loopPoints.every(({ index }) => {\n      const otherIndexes = ascItems.filter(i => i !== index)\n      return subtractItemSizes(otherIndexes, viewSize) <= 0\n    })\n  }\n\n  function loop(slides: HTMLElement[]): void {\n    loopPoints.forEach(loopPoint => {\n      const { getTarget, location, index } = loopPoint\n      const target = getTarget(containerLocation.get())\n      if (target !== location) {\n        slides[index].style[loopStyle] = `${target}%`\n        loopPoint.location = target\n      }\n    })\n  }\n\n  function clear(slides: HTMLElement[]): void {\n    loopPoints.forEach(({ index }) => {\n      slides[index].style[loopStyle] = ''\n    })\n  }\n\n  const self: SlideLooper = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints,\n  }\n  return self\n}\n","import { arrayKeys } from './utils'\n\ntype Params = {\n  contentSize: number\n  slideSizes: number[]\n  viewSize: number\n  loop: boolean\n  inViewThreshold: number\n}\n\ntype SlidePoint = {\n  start: number\n  end: number\n  index: number\n}\n\nexport type SlidesInView = {\n  check: (location: number) => number[]\n}\n\nexport function SlidesInView(params: Params): SlidesInView {\n  const { contentSize, slideSizes, viewSize } = params\n  const { inViewThreshold, loop } = params\n  const thresholds = slideSizes.map(s => s * inViewThreshold)\n  const scrollSnaps = arrayKeys(slideSizes).map(scrollSnap)\n  const pointsToCheck = concatSlidePoints()\n\n  function scrollSnap(index: number): number {\n    const span = slideSizes.slice(0, index)\n    return span.reduce((a, s) => a - s, 0)\n  }\n\n  function concatSlidePoints(): SlidePoint[] {\n    const offsets = loop ? [0, contentSize, -contentSize] : [0]\n    return offsets.map(slidePoints).reduce((a, b) => a.concat(b), [])\n  }\n\n  function slidePoints(offset: number): SlidePoint[] {\n    return scrollSnaps.map((snap, index) => ({\n      start: snap - slideSizes[index] + thresholds[index] + offset,\n      end: snap + viewSize - thresholds[index] + offset,\n      index,\n    }))\n  }\n\n  function check(location: number): number[] {\n    return pointsToCheck.reduce((list: number[], point) => {\n      const { index, start, end } = point\n      const inList = list.indexOf(index) !== -1\n      const inView = start < location && end > location\n      return !inList && inView ? list.concat([index]) : list\n    }, [])\n  }\n\n  const self: SlidesInView = {\n    check,\n  }\n  return self\n}\n","import { Axis } from './axis'\nimport { roundToDecimals } from './utils'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  axis: Axis\n  container: HTMLElement\n}\n\nexport type Translate = {\n  clear: () => void\n  to: (vector: Vector1D) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function Translate(params: Params): Translate {\n  const { axis, container } = params\n  const translates = { x, y }\n  const translateAxis = translates[axis.scroll]\n  const roundToTwoDecimals = roundToDecimals(2)\n  const containerStyle = container.style\n  let disabled = false\n  let location = 0\n\n  function x(n: number): string {\n    return `translate3d(${n}%,0px,0px)`\n  }\n\n  function y(n: number): string {\n    return `translate3d(0px,${n}%,0px)`\n  }\n\n  function to(v: Vector1D): void {\n    if (disabled) return\n    const target = roundToTwoDecimals(v.get())\n\n    if (location !== target) {\n      getComputedStyle(container).transform\n      containerStyle.transform = translateAxis(target)\n      location = target\n    }\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  function clear(): void {\n    containerStyle.transform = ''\n    location = 0\n  }\n\n  const self: Translate = {\n    clear,\n    to,\n    toggleActive,\n  }\n  return self\n}\n","import { Alignment } from './alignment'\nimport { Animation } from './animation'\nimport { Axis } from './axis'\nimport { Counter } from './counter'\nimport { DragHandler } from './dragHandler'\nimport { DragTracker } from './dragTracker'\nimport { EventEmitter } from './eventEmitter'\nimport { Limit } from './limit'\nimport { Options } from './options'\nimport { PxToPercent } from './pxToPercent'\nimport { ScrollBody } from './scrollBody'\nimport { ScrollBounds } from './scrollBounds'\nimport { ScrollContain } from './scrollContain'\nimport { ScrollLimit } from './scrollLimit'\nimport { ScrollLooper } from './scrollLooper'\nimport { ScrollProgress } from './scrollProgress'\nimport { ScrollSnap } from './scrollSnap'\nimport { ScrollTarget } from './scrollTarget'\nimport { ScrollTo } from './scrollTo'\nimport { SlideLooper } from './slideLooper'\nimport { SlidesInView } from './slidesInView'\nimport { Translate } from './translate'\nimport { arrayKeys, groupArray } from './utils'\nimport { Vector1D } from './vector1d'\n\nexport type Engine = {\n  axis: Axis\n  animation: Animation\n  scrollBounds: ScrollBounds\n  scrollLooper: ScrollLooper\n  scrollProgress: ScrollProgress\n  index: Counter\n  indexPrevious: Counter\n  limit: Limit\n  location: Vector1D\n  options: Options\n  pxToPercent: PxToPercent\n  scrollBody: ScrollBody\n  dragHandler: DragHandler\n  slideLooper: SlideLooper\n  slidesInView: SlidesInView\n  target: Vector1D\n  translate: Translate\n  scrollTo: ScrollTo\n  scrollTarget: ScrollTarget\n  scrollSnaps: number[]\n  snapIndexes: number[]\n}\n\nexport function Engine(\n  root: HTMLElement,\n  container: HTMLElement,\n  slides: HTMLElement[],\n  options: Options,\n  events: EventEmitter,\n): Engine {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    startIndex,\n    inViewThreshold,\n    loop,\n    speed,\n    dragFree,\n    slidesToScroll,\n    containScroll,\n  } = options\n\n  // Measurements\n  const axis = Axis(scrollAxis)\n  const pxToPercent = PxToPercent(axis.measure(container))\n  const viewSize = pxToPercent.totalPercent\n  const slideSizes = slides.map(axis.measure).map(pxToPercent.measure)\n  const groupedSizes = groupArray(slideSizes, slidesToScroll)\n  const snapSizes = groupedSizes.map(g => g.reduce((a, s) => a + s))\n  const snapIndexes = arrayKeys(snapSizes)\n  const contentSize = slideSizes.reduce((a, s) => a + s, 0)\n  const alignment = Alignment({ align, viewSize })\n  const scrollSnap = ScrollSnap({ snapSizes, alignment, loop })\n  const defaultSnaps = snapIndexes.map(scrollSnap.measure)\n  const contain = ScrollContain({ alignment, contentSize, viewSize })\n  const shouldContain = !loop && containScroll !== ''\n  const trimSnaps = containScroll === 'trimSnaps'\n  const containedSnaps = contain.measure(defaultSnaps, trimSnaps)\n  const scrollSnaps = shouldContain ? containedSnaps : defaultSnaps\n\n  // Index\n  const indexSpan = Limit({ min: 0, max: scrollSnaps.length - 1 })\n  const index = Counter({ limit: indexSpan, start: startIndex, loop })\n  const indexPrevious = index.clone()\n\n  // ScrollLimit\n  const scrollLimit = ScrollLimit({ loop, contentSize })\n  const limit = scrollLimit.measure(scrollSnaps)\n\n  // Draw\n  const update = (): void => {\n    engine.scrollBody.seek(target).update()\n    const settled = engine.scrollBody.settle(target)\n\n    if (!dragHandler.pointerDown()) {\n      if (!loop) engine.scrollBounds.constrain(target)\n      if (settled) {\n        engine.animation.stop()\n        events.emit('settle')\n      }\n    }\n    if (loop) {\n      const direction = engine.scrollBody.direction.get()\n      engine.scrollLooper.loop(loopVectors, direction)\n      engine.slideLooper.loop(slides)\n    }\n\n    if (!settled) events.emit('scroll')\n    engine.translate.to(engine.scrollBody.location)\n    engine.animation.proceed()\n  }\n\n  // Shared\n  const animation = Animation(update)\n  const startLocation = scrollSnaps[index.get()]\n  const location = Vector1D(startLocation)\n  const target = Vector1D(startLocation)\n  const loopVectors = [location, target]\n  const scrollBody = ScrollBody({ location, speed, mass: 1 })\n  const scrollTarget = ScrollTarget({\n    contentSize,\n    index,\n    limit,\n    loop,\n    scrollSnaps,\n    target,\n  })\n  const scrollTo = ScrollTo({\n    animation,\n    events,\n    index,\n    indexPrevious,\n    scrollTarget,\n    target,\n  })\n\n  // DragHandler\n  const dragHandler = DragHandler({\n    animation,\n    axis,\n    dragFree,\n    dragTracker: DragTracker({\n      axis,\n      pxToPercent,\n    }),\n    element: root,\n    events,\n    index,\n    limit,\n    location,\n    loop,\n    scrollBody,\n    scrollTo,\n    scrollTarget,\n    target,\n  })\n\n  // Slider\n  const engine: Engine = {\n    animation,\n    axis,\n    dragHandler,\n    pxToPercent,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    options,\n    scrollBody,\n    scrollBounds: ScrollBounds({\n      animation,\n      limit,\n      location,\n      scrollBody,\n    }),\n    scrollLooper: ScrollLooper({\n      contentSize,\n      limit,\n      location,\n      pxToPercent,\n    }),\n    scrollProgress: ScrollProgress({\n      limit,\n    }),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideLooper: SlideLooper({\n      axis,\n      contentSize,\n      location,\n      scrollSnaps,\n      slideSizes,\n      viewSize,\n    }),\n    slidesInView: SlidesInView({\n      contentSize,\n      inViewThreshold,\n      loop,\n      slideSizes,\n      viewSize,\n    }),\n    snapIndexes,\n    target,\n    translate: Translate({\n      axis,\n      container,\n    }),\n  }\n  return engine\n}\n","type Callback = (evt: EmblaEvent) => void\ntype Listeners = { [key in EmblaEvent]: Callback[] }\n\nexport type EmblaEvent =\n  | 'init'\n  | 'pointerDown'\n  | 'pointerUp'\n  | 'scroll'\n  | 'select'\n  | 'settle'\n  | 'destroy'\n  | 'reInit'\n  | 'resize'\n\nexport type EventEmitter = {\n  emit: (evt: EmblaEvent) => EventEmitter\n  on: (evt: EmblaEvent, cb: Callback) => EventEmitter\n  off: (evt: EmblaEvent, cb: Callback) => EventEmitter\n}\n\nexport function EventEmitter(): EventEmitter {\n  const listeners: Listeners = {\n    destroy: [],\n    pointerDown: [],\n    pointerUp: [],\n    init: [],\n    reInit: [],\n    resize: [],\n    scroll: [],\n    select: [],\n    settle: [],\n  }\n\n  function emit(evt: EmblaEvent): EventEmitter {\n    listeners[evt].forEach(e => e(evt))\n    return self\n  }\n\n  function on(evt: EmblaEvent, cb: Callback): EventEmitter {\n    listeners[evt] = listeners[evt].concat([cb])\n    return self\n  }\n\n  function off(evt: EmblaEvent, cb: Callback): EventEmitter {\n    listeners[evt] = listeners[evt].filter(e => e !== cb)\n    return self\n  }\n\n  const self: EventEmitter = {\n    emit,\n    off,\n    on,\n  }\n  return self\n}\n","import { AlignmentOption } from './alignment'\nimport { AxisOption } from './axis'\nimport { ScrollContainOption } from './scrollContain'\n\nexport type Options = {\n  align: AlignmentOption\n  axis: AxisOption\n  containScroll: ScrollContainOption\n  containerSelector: string\n  dragFree: boolean\n  draggable: boolean\n  draggableClass: string\n  draggingClass: string\n  inViewThreshold: number\n  loop: boolean\n  selectedClass: string\n  slidesToScroll: number\n  speed: number\n  startIndex: number\n}\n\nexport const defaultOptions: Options = {\n  align: 'center',\n  axis: 'x',\n  containScroll: '',\n  containerSelector: '*',\n  dragFree: false,\n  draggable: true,\n  draggableClass: 'is-draggable',\n  draggingClass: 'is-dragging',\n  inViewThreshold: 0,\n  loop: false,\n  selectedClass: 'is-selected',\n  slidesToScroll: 1,\n  speed: 10,\n  startIndex: 0,\n}\n\nexport type EmblaOptions = Partial<Options>\n","import { Engine } from './components/engine'\nimport { EventEmitter, EmblaEvent } from './components/eventEmitter'\nimport { EventStore } from './components/eventStore'\nimport { defaultOptions, EmblaOptions } from './components/options'\nimport {\n  addClass,\n  arrayFromCollection,\n  debounce,\n  removeClass,\n} from './components/utils'\n\nexport type EmblaCarousel = {\n  canScrollNext: () => boolean\n  canScrollPrev: () => boolean\n  clickAllowed: () => boolean\n  containerNode: () => HTMLElement\n  dangerouslyGetEngine: () => Engine\n  destroy: () => void\n  off: EventEmitter['off']\n  on: EventEmitter['on']\n  previousScrollSnap: () => number\n  reInit: (options: EmblaOptions) => void\n  scrollNext: () => void\n  scrollPrev: () => void\n  scrollProgress: () => number\n  scrollSnapList: () => number[]\n  scrollTo: (index: number) => void\n  selectedScrollSnap: () => number\n  slideNodes: () => HTMLElement[]\n  slidesInView: (target?: boolean) => number[]\n  slidesNotInView: (target?: boolean) => number[]\n}\n\nfunction EmblaCarousel(\n  sliderRoot: HTMLElement,\n  userOptions: EmblaOptions = {},\n): EmblaCarousel {\n  const events = EventEmitter()\n  const eventStore = EventStore()\n  const debouncedResize = debounce(resize, 500)\n  const reInit = reActivate\n  const { on, off } = events\n\n  let engine: Engine\n  let activated = false\n  let options = Object.assign({}, defaultOptions)\n  let containerSize = 0\n  let container: HTMLElement\n  let slides: HTMLElement[]\n\n  activate(userOptions)\n\n  function storeElements(): void {\n    if (!sliderRoot) throw new Error('Missing root node 😢')\n\n    const selector = options.containerSelector\n    const sliderContainer = sliderRoot.querySelector(selector)\n\n    if (!sliderContainer) throw new Error('Missing container node 😢')\n\n    container = sliderContainer as HTMLElement\n    slides = arrayFromCollection(container.children)\n  }\n\n  function activate(partialOptions: EmblaOptions = {}): void {\n    storeElements()\n    options = Object.assign(options, partialOptions)\n    engine = Engine(sliderRoot, container, slides, options, events)\n\n    const {\n      axis,\n      scrollBody,\n      translate,\n      dragHandler,\n      slideLooper,\n    } = engine\n    const {\n      loop,\n      draggable,\n      draggableClass,\n      selectedClass,\n      draggingClass,\n    } = options\n\n    containerSize = axis.measure(container)\n    eventStore.add(window, 'resize', debouncedResize)\n    translate.to(scrollBody.location)\n    slides.forEach(slideFocusEvent)\n    dragHandler.addActivationEvents()\n\n    if (loop) {\n      if (!slideLooper.canLoop()) return reActivate({ loop: false })\n      slideLooper.loop(slides)\n    }\n    if (draggable) {\n      if (draggableClass) {\n        addClass(sliderRoot, draggableClass)\n      }\n      if (draggingClass) {\n        events.on('pointerDown', toggleDraggingClass)\n        events.on('pointerUp', toggleDraggingClass)\n      }\n    } else {\n      events.on('pointerDown', dragHandler.removeInteractionEvents)\n    }\n    if (selectedClass) {\n      toggleSelectedClass()\n      events.on('select', toggleSelectedClass)\n      events.on('pointerUp', toggleSelectedClass)\n    }\n    if (!activated) {\n      setTimeout(() => events.emit('init'), 0)\n      activated = true\n    }\n  }\n\n  function toggleDraggingClass(evt: EmblaEvent): void {\n    const { draggingClass } = options\n    if (evt === 'pointerDown') addClass(sliderRoot, draggingClass)\n    else removeClass(sliderRoot, draggingClass)\n  }\n\n  function toggleSelectedClass(): void {\n    const { selectedClass } = options\n    const inView = slidesInView(true)\n    const notInView = slidesNotInView(true)\n    notInView.forEach(i => removeClass(slides[i], selectedClass))\n    inView.forEach(i => addClass(slides[i], selectedClass))\n  }\n\n  function slideFocusEvent(slide: HTMLElement, index: number): void {\n    const focus = (): void => {\n      const groupIndex = Math.floor(index / options.slidesToScroll)\n      const selectedGroup = index ? groupIndex : index\n      sliderRoot.scrollLeft = 0\n      scrollTo(selectedGroup)\n    }\n    eventStore.add(slide, 'focus', focus, true)\n  }\n\n  function reActivate(partialOptions: EmblaOptions = {}): void {\n    const startIndex = engine.index.get()\n    const newOptions = Object.assign({ startIndex }, partialOptions)\n    deActivate()\n    activate(newOptions)\n    events.emit('reInit')\n  }\n\n  function deActivate(): void {\n    const { selectedClass, draggableClass } = options\n    engine.dragHandler.removeActivationEvents()\n    engine.dragHandler.removeInteractionEvents()\n    engine.animation.stop()\n    eventStore.removeAll()\n    engine.translate.clear()\n    engine.slideLooper.clear(slides)\n    removeClass(sliderRoot, draggableClass)\n    slides.forEach(s => removeClass(s, selectedClass))\n    events.off('select', toggleSelectedClass)\n    events.off('pointerUp', toggleSelectedClass)\n    events.off('pointerDown', toggleDraggingClass)\n    events.off('pointerUp', toggleDraggingClass)\n  }\n\n  function destroy(): void {\n    if (!activated) return\n    deActivate()\n    activated = false\n    engine = {} as Engine\n    events.emit('destroy')\n  }\n\n  function resize(): void {\n    const newContainerSize = engine.axis.measure(container)\n    if (containerSize !== newContainerSize) reActivate()\n    events.emit('resize')\n  }\n\n  function slidesInView(target = false): number[] {\n    const location = engine[target ? 'target' : 'location'].get()\n    const type = options.loop ? 'removeOffset' : 'constrain'\n    return engine.slidesInView.check(engine.limit[type](location))\n  }\n\n  function slidesNotInView(target = false): number[] {\n    const inView = slidesInView(target)\n    return engine.snapIndexes.filter(i => inView.indexOf(i) === -1)\n  }\n\n  function scrollSnapList(): number[] {\n    const getScrollProgress = engine.scrollProgress.get\n    return engine.scrollSnaps.map(getScrollProgress)\n  }\n\n  function scrollTo(index: number): void {\n    engine.scrollBody.useDefaultMass().useDefaultSpeed()\n    engine.scrollTo.index(index, 0)\n  }\n\n  function scrollNext(): void {\n    const next = engine.index.clone().add(1)\n    engine.scrollBody.useDefaultMass().useDefaultSpeed()\n    engine.scrollTo.index(next.get(), -1)\n  }\n\n  function scrollPrev(): void {\n    const prev = engine.index.clone().add(-1)\n    engine.scrollBody.useDefaultMass().useDefaultSpeed()\n    engine.scrollTo.index(prev.get(), 1)\n  }\n\n  function canScrollPrev(): boolean {\n    const { index } = engine\n    return options.loop || index.get() !== index.min\n  }\n\n  function canScrollNext(): boolean {\n    const { index } = engine\n    return options.loop || index.get() !== index.max\n  }\n\n  function scrollProgress(): number {\n    const location = engine.location.get()\n    return engine.scrollProgress.get(location)\n  }\n\n  function selectedScrollSnap(): number {\n    return engine.index.get()\n  }\n\n  function previousScrollSnap(): number {\n    return engine.indexPrevious.get()\n  }\n\n  function clickAllowed(): boolean {\n    return engine.dragHandler.clickAllowed()\n  }\n\n  function dangerouslyGetEngine(): Engine {\n    return engine\n  }\n\n  function containerNode(): HTMLElement {\n    return container\n  }\n\n  function slideNodes(): HTMLElement[] {\n    return slides\n  }\n\n  const self: EmblaCarousel = {\n    canScrollNext,\n    canScrollPrev,\n    clickAllowed,\n    containerNode,\n    dangerouslyGetEngine,\n    destroy,\n    off,\n    on,\n    previousScrollSnap,\n    reInit,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView,\n  }\n  return self\n}\n\nexport default EmblaCarousel\n"],"names":["Alignment","params","viewSize","align","predefined","start","center","end","n","percent","Number","measure","self","Animation","callback","run","requestAnimationFrame","bind","window","cancelAnimationFrame","animationFrame","ifAnimating","active","cb","stop","proceed","Axis","axis","scroll","cross","node","_a","getBoundingClientRect","width","height","Counter","limit","loop","min","max","type","counter","withinLimit","get","set","add","sign","Math","abs","clone","Vector1D","value","vector","readNumber","subtract","multiply","divide","normalize","Direction","direction","v","d","EventStore","listeners","handler","options","addEventListener","push","removeEventListener","removeAll","filter","remove","length","DragHandler","target","scrollBody","dragFree","animation","element","dragTracker","location","events","scrollAxis","crossAxis","focusNodes","startScroll","startCross","dragStartPoint","activationEvents","interactionEvents","removeActivationEvents","removeInteractionEvents","snapForceBoost","mouse","touch","freeForceBoost","snapSpeed","freeSpeed","dragThreshold","pointerIsDown","preventScroll","preventClick","isMouse","addActivationEvents","undefined","down","up","click","addInteractionEvents","document","move","isFocusNode","name","nodeName","indexOf","movementSpeed","speed","dragForceBoost","boost","seekTargetBy","force","scrollTo","scrollTarget","index","reachedLimit","reachedAny","currentLocation","byDistance","targetChanged","seekNext","indexDiff","next","distance","evt","button","isMoving","delta","clearPreventClick","isNotFocusNode","preventDefault","pointerDown","useDefaultMass","useSpeed","readPoint","emit","moveScroll","moveCross","diffScroll","diffCross","diff","pointerMove","resist","pointerUp","pointB","pointA","clickAllowed","DragTracker","pxToPercent","coords","x","y","startDrag","diffDrag","lastDrag","pointValue","trackInterval","trackPoints","trackTime","Date","getTime","touches","c","point","time2","time1","currentPoint","trackLength","slice","map","trackPoint","sort","p1","p2","Limit","loopLimits","constrainLimits","reachedMin","reachedMax","reachedWhich","removeOffset","which","constrain","PxToPercent","viewInPx","totalPercent","Object","freeze","iStart","iStop","oStart","oStop","arrayFromCollection","nodeList","Array","prototype","call","debounce","time","timeout","id","clearTimeout","setTimeout","roundToDecimals","decimalPoints","pow","round","groupArray","array","size","groups","i","arrayKeys","keys","removeClass","className","cl","classList","contains","addClass","ScrollBody","mass","roundToTwoDecimals","velocity","acceleration","attraction","state","update","applyForce","seek","magnitude","m","settle","diffRounded","hasSettled","useDefaultSpeed","useMass","ScrollBounds","tolerance","disabled","shouldConstrain","constraint","toggleActive","ScrollContain","alignment","contentSize","scrollBounds","alignedWithinView","contentExceedsView","findDuplicates","scrollSnaps","startSnap","endSnap","lastIndexOf","trim","containedSnaps","ScrollLimit","ScrollLooper","shouldLoop","vectors","loopDistance","forEach","ScrollProgress","scrollLength","ScrollSnap","snapSizes","alignments","distancesBetween","distancesBetweenScrollSnaps","sizes","reduce","a","s","ScrollTarget","minDistance","d1","d2","findTargetSnap","ascDiffsToSnaps","scrollSnap","diffToSnap","shortcut","t1","t2","t3","shortest","findTargetIndex","reachedBound","byIndex","snap","targetSnap","snapDistance","ScrollTo","indexCurrent","indexPrevious","targetDistance","distanceDiff","targetIndex","SlideLooper","containerLocation","slideSizes","ascItems","descItems","reverse","loopPoints","startPoints","concat","endPoints","loopStyle","subtractItemSizes","indexes","from","loopItemsIn","sizeOfGap","gapLeft","loopStart","gapFilled","loopPointFor","slideCount","loopPointsFor","ascIndexes","b","loopIndex","initial","offset","slidesInSpan","getTarget","gap","canLoop","every","otherIndexes","slides","loopPoint","style","clear","SlidesInView","inViewThreshold","thresholds","pointsToCheck","concatSlidePoints","span","offsets","slidePoints","check","list","inList","inView","Translate","container","translates","translateAxis","containerStyle","to","getComputedStyle","transform","Engine","root","startIndex","slidesToScroll","containScroll","groupedSizes","g","snapIndexes","defaultSnaps","contain","shouldContain","trimSnaps","indexSpan","scrollLimit","engine","settled","dragHandler","scrollLooper","loopVectors","slideLooper","translate","startLocation","scrollProgress","slidesInView","EventEmitter","destroy","init","reInit","resize","select","e","on","off","defaultOptions","containerSelector","draggable","draggableClass","draggingClass","selectedClass","EmblaCarousel","sliderRoot","userOptions","eventStore","debouncedResize","reActivate","activated","containerSize","activate","storeElements","Error","selector","sliderContainer","querySelector","children","partialOptions","slideFocusEvent","toggleDraggingClass","toggleSelectedClass","notInView","slidesNotInView","slide","focus","groupIndex","floor","selectedGroup","scrollLeft","newOptions","deActivate","newContainerSize","scrollSnapList","getScrollProgress","scrollNext","scrollPrev","prev","canScrollPrev","canScrollNext","selectedScrollSnap","previousScrollSnap","dangerouslyGetEngine","containerNode","slideNodes"],"mappings":"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"}